##default : 3
##连接池在无空闲连接可用时一次性创建的新数据库连接数
acquireIncrement=5
##driverClass=com.microsoft.sqlserver.jdbc.SQLServerDriver
##default : 3
##连接池初始化时创建的连接数
initialPoolSize=5
##default : 15
##连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待
##其他连接释放，所以这个值有可能会设计地很大
maxPoolSize=15
##default : 0 单位 s
##连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接
##如果为0，则永远不会断开连接
maxIdleTime=0
##default : 3
##连接池保持的最小连接数，后面的maxIdleTimeExcessConnections跟这个配合使用来减轻连接池的负载
minPoolSize=3
##default : 0 单位 s
##配置连接的生存时间，超过这个时间的连接将由连接池自动断开丢弃掉。当然正在使用的连接不会马上断开，而是等待
##它close再断开。配置为0的时候则不会对连接的生存时间进行限制。
maxConnectionAge=0
##default : 0 单位 s
##这个配置主要是为了减轻连接池的负载，比如连接池中连接数因为某次数据访问高峰导致创建了很多数据连接
##但是后面的时间段需要的数据库连接数很少，则此时连接池完全没有必要维护那么多的连接，所以有必要将
##断开丢弃掉一些连接来减轻负载，必须小于maxIdleTime。配置不为0，则会将连接池中的连接数量保持到minPoolSize。
##为0则不处理。
maxIdleTimeExcessConnections=0
##default : null
##用来配置测试连接的一种方式。配置一个表名，连接池根据这个表名创建一个空表，
##并且用自己的测试sql语句在这个空表上测试数据库连接
##这个表只能由c3p0来使用，用户不能操作，同时用户配置的preferredTestQuery 将会被忽略。
##automaticTestTable=

##default : null
##用来配置测试连接的另一种方式。与上面的automaticTestTable二者只能选一。
##如果要用它测试连接，千万不要设为null，否则测试过程会很耗时，同时要保证sql语句中的表在数据库中一定存在。
##preferredTestQuery=

##default :  com.mchange.v2.c3p0.impl.DefaultConnectionTester
##连接池用来支持automaticTestTable和preferredTestQuery测试的类，必须是全类名，就像默认的那样，
##可以通过实现UnifiedConnectionTester接口或者继承AbstractConnectionTester来定制自己的测试方法
connectionTesterClassName=com.mchange.v2.c3p0.impl.DefaultConnectionTester
##default : 0
##用来配置测试空闲连接的间隔时间。测试方式还是上面的两种之一，可以用来解决MySQL8小时断开连接的问题。因为它
##保证连接池会每隔一定时间对空闲连接进行一次测试，从而保证有效的空闲连接能每隔一定时间访问一次数据库，将于MySQL
##8小时无会话的状态打破。为0则不测试。
idleConnectionTestPeriod=0
##default : false
##如果为true，则在close的时候测试连接的有效性。为了提高测试性能，可以与idleConnectionTestPeriod搭配使用，
##配置preferredTestQuery或automaticTestTable也可以加快测试速度。
testConnectionOnCheckin=false
##default : false
##性能消耗大。如果为true，在每次getConnection的时候都会测试，为了提高性能，
##可以与idleConnectionTestPeriod搭配使用，
##配置preferredTestQuery或automaticTestTable也可以加快测试速度。
testConnectionOnCheckout=false
##default : 0
##连接池为数据源缓存的PreparedStatement的总数。由于PreparedStatement属于单个Connection,所以
##这个数量应该根据应用中平均连接数乘以每个连接的平均PreparedStatement来计算。为0的时候不缓存，
##同时maxStatementsPerConnection的配置无效。
maxStatements=0
##default : 0
##连接池为数据源单个Connection缓存的PreparedStatement数，这个配置比maxStatements更有意义，因为
##它缓存的服务对象是单个数据连接，如果设置的好，肯定是可以提高性能的。为0的时候不缓存
maxStatementsPerConnection=0
##default : 30
##连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功
acquireRetryAttempts=30
##default : 1000 单位ms
##连接池在获得新连接时的间隔时间
acquireRetryDelay=1000
##default : false
##如果为true，则当连接获取失败时自动关闭数据源，除非重新启动应用程序。所以一般不用。
breakAfterAcquireFailure=false

##connectionCustomizerClassName
##default : null
##用来定制Connection的管理，比如在Connection acquire 的时候设定Connection的隔离级别，或者在
##Connection丢弃的时候进行资源关闭，就可以通过继承一个AbstractConnectionCustomizer来实现相关
##方法，配置的时候使用全类名。有点类似监听器的作用。
##connectionCustomizerClassName=null
